model User {
    id                  String                @id @default(auto()) @map("_id") @db.ObjectId
    name                String
    email               String                @unique
    password            String?
    avatar              String?
    role                Role                  @default(USER)
    country             String?
    language            String?
    profession          String?
    description         String?
    isVerified          Boolean               @default(false)
    isBlocked           Boolean               @default(false)
    resetToken          String?
    resetTokenExpiry    DateTime?
    comments            Comment[] 
    rooms               Room[]                @relation("RoomParticipants")
    mentorApplications   MentorApplication[]
    createdRooms   Room[]   @relation("RoomCreator")
    following           String[]    @db.ObjectId
    followers           String[]    @db.ObjectId
    @@map("users")
}

enum Role {
    USER
    ADMIN
    MENTOR
}

model Comment {
    id                  String                @id @default(auto()) @map("_id") @db.ObjectId
    feedback            String
    rating              Int
    givenBy             String                @db.ObjectId
    userId              String                @db.ObjectId

    // Relations
    givenUser                User             @relation(fields: [givenBy], references: [id])
    createdAt    DateTime  
    
    @@map("comments")  
}

